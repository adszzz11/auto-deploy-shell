#!/bin/bash
# test_instance.env - Test Instance Configuration

# ==============================================
# Test Execution Settings
# ==============================================

# Enable/disable testing
export TEST_INSTANCE_ENABLED="${TEST_INSTANCE_ENABLED:-true}"

# Test mode: simple, full, custom
# - simple: Basic HTTP status check only
# - full: HTTP + TCP + response time
# - custom: Run custom test script
export TEST_MODE="${TEST_MODE:-simple}"

# ==============================================
# HTTP Status Test Settings
# ==============================================

# HTTP test endpoint (default: Spring Boot Actuator health)
export TEST_HTTP_ENDPOINT="${TEST_HTTP_ENDPOINT:-/actuator/health}"

# Expected HTTP status code
export TEST_EXPECTED_STATUS="${TEST_EXPECTED_STATUS:-200}"

# HTTP method (GET, POST, etc.)
export TEST_HTTP_METHOD="${TEST_HTTP_METHOD:-GET}"

# Use HTTPS instead of HTTP
export TEST_USE_HTTPS="${TEST_USE_HTTPS:-false}"

# ==============================================
# TCP Connection Test Settings
# ==============================================

# Enable TCP connection test
export TEST_TCP_ENABLED="${TEST_TCP_ENABLED:-false}"

# TCP connection timeout (seconds)
export TEST_TCP_TIMEOUT="${TEST_TCP_TIMEOUT:-5}"

# ==============================================
# Response Time Test Settings
# ==============================================

# Enable response time test
export TEST_RESPONSE_TIME_ENABLED="${TEST_RESPONSE_TIME_ENABLED:-false}"

# Maximum acceptable response time (milliseconds)
export TEST_MAX_RESPONSE_TIME="${TEST_MAX_RESPONSE_TIME:-1000}"

# Response time test endpoint (default: same as HTTP test)
export TEST_RESPONSE_TIME_ENDPOINT="${TEST_RESPONSE_TIME_ENDPOINT:-}"

# ==============================================
# Retry and Timeout Settings
# ==============================================

# Number of retry attempts
export TEST_RETRY_COUNT="${TEST_RETRY_COUNT:-3}"

# Delay between retries (seconds)
export TEST_RETRY_DELAY="${TEST_RETRY_DELAY:-5}"

# Overall test timeout (seconds)
export TEST_TIMEOUT="${TEST_TIMEOUT:-30}"

# Wait time before starting tests (for app warmup)
export TEST_WARMUP_WAIT="${TEST_WARMUP_WAIT:-5}"

# ==============================================
# Custom Test Settings
# ==============================================

# Custom test script path (absolute or relative to instance dir)
export TEST_CUSTOM_SCRIPT="${TEST_CUSTOM_SCRIPT:-}"

# Custom test timeout (seconds)
export TEST_CUSTOM_TIMEOUT="${TEST_CUSTOM_TIMEOUT:-60}"

# Pass environment file to custom test script
export TEST_CUSTOM_PASS_ENV="${TEST_CUSTOM_PASS_ENV:-true}"

# ==============================================
# Reporting Settings
# ==============================================

# Verbose test output
export TEST_VERBOSE="${TEST_VERBOSE:-false}"

# Show response body on failure
export TEST_SHOW_RESPONSE_ON_FAIL="${TEST_SHOW_RESPONSE_ON_FAIL:-true}"

# Log test results to file
export TEST_LOG_RESULTS="${TEST_LOG_RESULTS:-false}"

# Test result log directory
export TEST_LOG_DIR="${TEST_LOG_DIR:-/tmp/test_instance_logs}"

# ==============================================
# Health Check Specific Settings
# ==============================================

# Expected health check response body pattern (regex)
export TEST_HEALTH_BODY_PATTERN="${TEST_HEALTH_BODY_PATTERN:-}"

# Required headers (comma-separated: "Header1:Value1,Header2:Value2")
export TEST_REQUIRED_HEADERS="${TEST_REQUIRED_HEADERS:-}"

# ==============================================
# Failure Handling
# ==============================================

# Continue deployment even if tests fail
export TEST_CONTINUE_ON_FAIL="${TEST_CONTINUE_ON_FAIL:-false}"

# Create detailed failure report
export TEST_CREATE_FAILURE_REPORT="${TEST_CREATE_FAILURE_REPORT:-true}"

# Failure report directory
export TEST_FAILURE_REPORT_DIR="${TEST_FAILURE_REPORT_DIR:-/tmp/test_failures}"

# ==============================================
# Notes
# ==============================================
#
# Test Modes:
# - simple: Quick HTTP status check (default for deployment)
# - full: Comprehensive testing (HTTP + TCP + response time)
# - custom: Run user-defined test script
#
# Retry Logic:
# - Tests will retry TEST_RETRY_COUNT times with TEST_RETRY_DELAY seconds between attempts
# - Useful for handling app startup delays
#
# Custom Tests:
# - Custom script receives: <port> <service_name> [env_file]
# - Must exit 0 for success, non-zero for failure
# - Can use all environment variables from env_file
#
